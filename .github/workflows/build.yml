# Based on https://github.com/markuslindenberg/ffmpeg-deb-srt/blob/master/.github/workflows/build.yml
name: build

on:
  push:
    branches:
      - ci
#  schedule:
#    - cron: '20 04 * * *'

jobs:
  build:
    name: Build deb packages
    strategy:
      matrix:
        codename: ['focal']
        #codename: ['focal', 'buster']
        include:
          - codename: 'focal'
            image: 'ubuntu:focal'
        #  - codename: 'buster'
        #    image: 'debian:buster'
      fail-fast: false
    runs-on: ubuntu-latest
    container:
      image: '${{ matrix.image }}'
    env:
      DEBIAN_FRONTEND: noninteractive
      DEBIAN_PRIORITY: critical
      DEBCONF_NOWARNINGS: yes
      PUBKEY_URL: 'https://max-m.github.io/ffmpeg-srt/public.key'
      REPO: 'https://max-m.github.io/ffmpeg-srt/repo'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check if build is needed
        id: version_check
        continue-on-error: true
        run: |
          set -ex
          apt-get update
          export UPSTREAM_VERSION="$(apt-cache --no-all-versions show ffmpeg | awk '/^Version/ { print $2 }')"
          apt-get -y install --no-install-recommends ca-certificates apt-transport-https gnupg1 gpgv1 curl
          curl -Lo public.key $PUBKEY_URL
          apt-key add public.key
          echo "deb [arch=amd64] $REPO ${{ matrix.codename }} main" > /etc/apt/sources.list.d/ffmpeg-srt.list
          apt-get update
          export SRT_VERSION="$(apt-cache madison ffmpeg | awk '{ if ($5 == ENVIRON["REPO"]) { print $3 } }')"
          dpkg --compare-versions "$SRT_VERSION" gt "$UPSTREAM_VERSION"
      - name: Remove custom repo
        run: |
          rm -f /etc/apt/sources.list.d/ffmpeg-srt.list
      - name: Install build environment
        if: steps.version_check.outcome == 'failure'
        run: |
          echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90assumeyes
          echo 'APT::Get::Install-Recommends "false";\nAPT::Get::Install-Suggests "false";' > /etc/apt/apt.conf.d/90norecommends
          sed -i 's/^deb \(.*\)$/&\ndeb-src \1/' /etc/apt/sources.list
          apt-get update
          apt-get install build-essential devscripts equivs lintian gnupg1 gpgv1 lsb-release curl ca-certificates
      - name: Get srt source
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          cat /etc/apt/sources.list | grep -v debian-security | sed 's/buster/bullseye/' > /etc/apt/sources.list.d/bullseye.list
          apt-get update
          apt-get -t bullseye source srt
          rm -f /etc/apt/sources.list.d/bullseye.list
          apt-get update
      - name: Get srt build dependencies
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          mk-build-deps -i -r srt-*/debian/control
      - name: Build srt
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          cd srt-*/
          debuild -us -uc -b
      - name: Install srt
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          dpkg -i *.deb
      - name: Get ffmpeg source
        if: steps.version_check.outcome == 'failure'
        run: |
          apt-get source ffmpeg
      - name: Patch ffmpeg
        if: steps.version_check.outcome == 'failure'
        run: |
          cd ffmpeg-*/
          sed -i 's/^Build-Depends:$/&\n libsrt-dev,\n libssl-dev,/' debian/control
          sed -i 's/^CONFIG :=.*$/&\n        --enable-libsrt \\/' debian/rules
          dch --local +srt 'Rebuilt with SRT support by https://github.com/max-m/ffmpeg-srt'
          dch --release ''
      - name: Get ffmpeg build dependencies
        if: steps.version_check.outcome == 'failure'
        run: |
          mk-build-deps -i -r ffmpeg-*/debian/control
      - name: Build ffmpeg
        if: steps.version_check.outcome == 'failure'
        run: |
          cd ffmpeg-*/
          debuild -us -uc -b
      - name: Upload packages
        if: steps.version_check.outcome == 'failure'
        uses: smeinecke/apt-repo-action@v2.1.1
        with:
          debug: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo_supported_arch: amd64
          repo_supported_version: ${{ matrix.codename }}
          file: '*.deb'
          file_target_version: ${{ matrix.codename }}
          private_key: ${{ secrets.GPG_PRIVATE }}
